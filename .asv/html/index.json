{"project": "physipy", "project_url": "https://github.com/mocquin/physipy", "show_commit_url": "https://github.com/mocquin/physipy/commit/", "hash_length": 8, "revision_to_hash": {"96": "4965eee193616ca14af447503b56b4e8a8a94a75", "212": "91bd809e3e4750a5f4825f8f21f70936ab3538b0", "230": "d00a6708f47ac0c60ae1695324266555c5b9336e", "233": "854e5b02643226530314b651932c1ebe5ae55343", "493": "22f3d54ca279186166fea8c008430969d3400820", "647": "c0330ea72c6057eb4dbad8971a46c89541f30ea6", "648": "35c345a5c6616f954ada9423877ebcac610ad749", "649": "58c9ea76c05178bb9b4ab02b35e0bf06ba661085", "650": "75365c020c5a72833d3764c2266f6ea60982c8df", "651": "c3e414d968a2486315ae06db72051274d3b04c57", "652": "443f44446105e771d46e0b1038cb9808da8d8d17", "653": "75400f114642887d16f099bd8349670f44a4916b", "654": "64e4694975812024860f8209087e858238982e0c", "655": "3cdbb2da281808defb9d4f4f3921c50fd1246419", "656": "7553cc17c661f8ed0631a35d4f0d89873aacede5", "657": "9211ad5a5a5b3de6b7abc65d598a926593de4e06", "658": "c388cba4832fe71d19ea458b5d80e354ac4689a4", "659": "bd87134a1705d3cecc13393dd347fb1cdde0036a", "660": "16aa37fddec8d2b6bb9657050026ccf1937d9b2a", "661": "f9bfe5142cfd9cc316870ef7baf66eacbd32eae8", "662": "c004412ec9dad1fe3b2f42949529de8e85fec2f2", "663": "0ae1b2ef359e9926f07a3d221750407bc69caf98", "664": "660261e3785b074a81a5164f3d4f810a435d22ba", "665": "c09611301bccef01b77cbd79c55789a40d3faae3", "666": "18a77ef37ee51b27185942a0d9c333ecad57ca65", "667": "471ac1760ea8536a1156f033f80432a192e75b45", "668": "a88fbc8ea741cf0d5d29abc85f27cc366aac06a4", "669": "e25c05061687b2b21e835fcd67c17c4835928f63", "670": "ddd27b9397609c0338289d8b65372350f4682728", "671": "da143ae265798b64dff94a18053106f024109626", "672": "8a6ca5d528e83233097d66b65048e418ddba705b", "673": "3feef211ed60a8712e874bebbcd0b810c81845c2", "674": "6318e8ede7118cba30ee07fffca9301a14589e17", "675": "0cc603b976d94ba755a50131cf18926e88bab183", "676": "fe7cadd0facceab49d4e27c0819a07c339db4f73", "677": "05ea9cb21ada44b35ded1daea377ef3847be9dc9", "678": "322cf98a32db83b80f19af4ded432a5027e95bcb", "679": "dc8411106f4d0c82f6f9994d085bbc2b2e4df237", "680": "14e547f2fdc30fa0bb4a298d696d281dbb29a9e2", "681": "3c6971a179b7fa58dd8745182d4295509d2030dc", "682": "aa76b82589942c1d9796137fb06546d885ffb2b1", "683": "f9799e05752f4c340be9c8cf0df16b535569f176", "684": "6c17957df3c54ffa783693119df28dd4cd9d1c50", "685": "5c18656778b34e0e9b5663850cf7e1ed0a0fb4fa", "686": "9c287a60f814c136a3c651b905e6ca5a04c4045c", "687": "71c5215a3724e1d52e6a253f6928e36560a361a2", "688": "25f69bf53c57add10cadff229a832103783afe56", "689": "07c406a5485a63055730c4bc8180d18e6338ed07", "690": "c63119e4123068b0a566dde5cb8215ca67b35c7c", "691": "bb6ea2866b754eb23e1fc279905be9fa7ae19814", "692": "4fb702fe412145ae2098e6518b257ca584e9b507", "693": "a42ea8c75ea4f8ae05c3705340b8490a00e5c2f6", "694": "5b9c0ed5ddd91911fe2329689fbb6bb8e1f31fff", "695": "ab89c4094b399b681f620d8c461938d1bede42fb", "696": "8f7e56f5a17db11a851f9d5f310aa819da78afdd", "697": "e5d63aae8313a6cacc048439dded50d135a7ed0c", "698": "3f9771c24a02915f64126b1341775e5e3bf7c116", "699": "33a12a18d3b7e2af3ce22d4ddc40b2062876540c", "700": "c87bc810f88cbb6e19f918d633ae89043c912371", "701": "710bf6f6fa72386643eae428f80760d87281b7ee", "702": "d6d405aebd15a640b73336450155bac746ef2837", "703": "a31c11448be3ac1a7c417e1f65b3ab738515c653", "705": "2b09639cbf70214ff6133e12243a8d862e49dbf7", "706": "651086a262333e9627d43db4d38f2771ec36a540", "710": "84a61ddeee5fa44cd8a137a98d00abb164905a80", "732": "7a08a77c777dbc90b773927556d6767307f7b11d", "751": "86599c39f9a55d62c3f412703a8655208ee6e986", "792": "9e463baf7afb1a6636d6b27e7818efa0ee9d9e89"}, "revision_to_date": {"96": 1555182024000, "212": 1584556599000, "230": 1587221824000, "233": 1587369789000, "493": 1617343854000, "647": 1639510201000, "648": 1639510579000, "649": 1639510686000, "650": 1639511126000, "651": 1639511506000, "652": 1639511544000, "653": 1639511552000, "654": 1639511576000, "655": 1639512477000, "656": 1639512497000, "657": 1639515869000, "658": 1639516103000, "659": 1639517533000, "660": 1639551218000, "661": 1639551232000, "662": 1639597257000, "663": 1639936238000, "664": 1639938252000, "665": 1639943924000, "666": 1639943983000, "667": 1639944193000, "668": 1639944208000, "669": 1640033862000, "670": 1640033882000, "671": 1640035732000, "672": 1640035918000, "673": 1640118878000, "674": 1640119580000, "675": 1640293650000, "676": 1640631297000, "677": 1640631314000, "678": 1640632268000, "679": 1640633324000, "680": 1640761383000, "681": 1640814021000, "682": 1641063034000, "683": 1641066285000, "684": 1641066840000, "685": 1641067034000, "686": 1641067123000, "687": 1641067274000, "688": 1641067519000, "689": 1641141493000, "690": 1641142611000, "691": 1641142990000, "692": 1641143437000, "693": 1641145816000, "694": 1641152058000, "695": 1641152925000, "696": 1641157307000, "697": 1641157319000, "698": 1641235728000, "699": 1641237424000, "700": 1641240233000, "701": 1641240393000, "702": 1641241981000, "703": 1641241997000, "705": 1641369872000, "706": 1641369892000, "710": 1641752690000, "732": 1644861235000, "751": 1647466396000, "792": 1660847797000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Core(TM) i7-5557U CPU @ 3.10GHz"], "machine": ["MPB-de-Yoann"], "num_cpu": ["4"], "os": ["macOS Mojave 10.14.5"], "ram": ["17179869184"], "python": ["3.9"], "numpy": ["1.21", "1.23.2"], "sympy": ["1.11", "1.9"], "scipy": ["1.7.1", "1.9.0"], "matplotlib": ["3.5.1", "3.5.3"], "branch": ["master"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-5557U CPU @ 3.10GHz", "machine": "MPB-de-Yoann", "num_cpu": "4", "os": "macOS Mojave 10.14.5", "ram": "17179869184", "python": "3.9", "numpy": "1.21", "sympy": "1.9", "scipy": "1.7.1", "matplotlib": "3.5.1", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-5557U CPU @ 3.10GHz", "machine": "MPB-de-Yoann", "num_cpu": "4", "os": "macOS Mojave 10.14.5", "ram": "17179869184", "python": "3.9", "numpy": "1.23.2", "sympy": "1.11", "scipy": "1.9.0", "matplotlib": "3.5.3", "branch": "master"}], "benchmarks": {"benchmarks.BasicPhysipy.mem_unit": {"code": "class BasicPhysipy:\n    def mem_unit(self):\n        \"\"\"\n        Memory consumption of the meter\n        \"\"\"\n        return mq\n\n    def setup(self):\n        self.arr = np.arange(10)", "name": "benchmarks.BasicPhysipy.mem_unit", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "3a93ad08a52470b6b9e88e28669db9c9726ec25e667f5e9a53914f128cc7290b"}, "benchmarks.BasicPhysipy.time_QuantityAdd": {"code": "class BasicPhysipy:\n    def time_QuantityAdd(self):\n        q = m + m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_QuantityAdd", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ef58d8c8f9bbb231e62b5b3b37055be92526fb01eeac10aa3f72e35d5ee9963d", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_QuantityCreation": {"code": "class BasicPhysipy:\n    def time_QuantityCreation(self):\n        q = physipy.Quantity(1, physipy.Dimension(\"M\"))\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_QuantityCreation", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1ef49fbd3644623d4a91028b0c7a57965fa5073eeed9624035bcc64c8a324fdf", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_QuantityCreationByArray": {"code": "class BasicPhysipy:\n    def time_QuantityCreationByArray(self):\n        q = self.arr * m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_QuantityCreationByArray", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "30831440b7877bdb6cc9d5a18f95030f969bef1785464ef22c0f2917b5cd047f", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_QuantityCreationByExpr": {"code": "class BasicPhysipy:\n    def time_QuantityCreationByExpr(self):\n        q = physipy.Quantity(1, physipy.Dimension(\"M/L\"))\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_QuantityCreationByExpr", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "b56bbd9890f1a6e636b5ca6dc5602666f2aedf5cf746bb71e7e8c6545b842029", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_QuantityCreationByMul": {"code": "class BasicPhysipy:\n    def time_QuantityCreationByMul(self):\n        q = 2 * m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_QuantityCreationByMul", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d67f937f17d3a062406e40d51b01ae780af8fd83a2e87046d6d55a17ea78dee6", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_arr_scalar_op_add": {"code": "class BasicPhysipy:\n    def time_arr_scalar_op_add(self): arr_m + m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_arr_scalar_op_add", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "df1d643e31a2caf0ff890ab8eb11a060d4220413c7ecf02a658ed1e4e4c3fee3", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_arr_scalar_op_div": {"code": "class BasicPhysipy:\n    def time_arr_scalar_op_div(self): arr_m / m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_arr_scalar_op_div", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "373396897884bf2b454a7196d1f025b62ff08a7a68b5c1c332ca1d7bba3f35d1", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_arr_scalar_op_mul": {"code": "class BasicPhysipy:\n    def time_arr_scalar_op_mul(self): arr_m * m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_arr_scalar_op_mul", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0a6ad044deb3abbf8691b9c0cd130daeb189ad0151423703413998c4a260294e", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_arr_scalar_op_pow": {"code": "class BasicPhysipy:\n    def time_arr_scalar_op_pow(self): arr_m ** 1\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_arr_scalar_op_pow", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "bdb64fe4dc41e42f9fcde60bd6d2e3a13437e5e528200ae309b8111b99de77f8", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_arr_scalar_op_sub": {"code": "class BasicPhysipy:\n    def time_arr_scalar_op_sub(self): arr_m - m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_arr_scalar_op_sub", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "af3caaeb69ace6cea22058dd28df55f529f30821a7b4aa7084919acc3d7f4472", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_arr_scalar_op_truediv": {"code": "class BasicPhysipy:\n    def time_arr_scalar_op_truediv(self): arr_m // m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_arr_scalar_op_truediv", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "8e44a0722ff7af32ce092ba5e103ede6a11b4485162ddb5688dd26e56aa6f437", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_scalar_op_add": {"code": "class BasicPhysipy:\n    def time_scalar_op_add(self): m + m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_scalar_op_add", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c967057839cb6b53550716b94b3078c6a26034cd2b0734ca357d6c2323295949", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_scalar_op_div": {"code": "class BasicPhysipy:\n    def time_scalar_op_div(self): m / m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_scalar_op_div", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "060415ee7ae9fdb2a3ce6778d6be5d9197b35a17b7aad767b575f46d2abe3b5c", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_scalar_op_mul": {"code": "class BasicPhysipy:\n    def time_scalar_op_mul(self): m * m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_scalar_op_mul", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d7e69391886846ca7db2bffcc98b82b5c41ba64ac5a63cdb9e43823d6ebf4020", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_scalar_op_pow": {"code": "class BasicPhysipy:\n    def time_scalar_op_pow(self): m ** 1\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_scalar_op_pow", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "047e2e9068c1ef582ade1fbf4874049d46aa5cbd1b838f35a1743c9e3e51e203", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_scalar_op_sub": {"code": "class BasicPhysipy:\n    def time_scalar_op_sub(self): m - m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_scalar_op_sub", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "45d68f3e658bd25dbbb43f890d200593d835b6ba0da7f0a8cc7b54378dc78aa0", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_scalar_op_truediv": {"code": "class BasicPhysipy:\n    def time_scalar_op_truediv(self): m // m\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_scalar_op_truediv", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d7684742d3a708cba6a666cc1eda898f7eda31727b0aa6829d03a1a9744ef91d", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_use_case": {"code": "class BasicPhysipy:\n    def time_use_case(self):\n        x = arr * m\n        x2 = sca * s**2\n        y = x*x2/pi * np.sum(x**2) + 3*m**3*s**2\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_use_case", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "08eef822fbe1776e53e8b60ec0a887ea1aed398597f93aabc4b72b2142fe1af5", "warmup_time": -1}, "benchmarks.BasicPhysipy.time_use_case2": {"code": "class BasicPhysipy:\n    def time_use_case2(self):\n        from physipy import units, constants, K\n        mum = units[\"mum\"]\n        hp = constants[\"h\"]\n        c = constants[\"c\"]\n        kB = constants[\"k\"]\n    \n        def plancks_law(lmbda, Tbb):\n            return 2*hp*c**2/lmbda**5 * 1/(np.exp(hp*c/(lmbda*kB*Tbb))-1)\n        lmbdas = ech_lmbda_mum*mum\n        Tbb = 300*K\n        integral = np.trapz(plancks_law(lmbdas, Tbb), x=lmbdas)\n\n    def setup(self):\n        self.arr = np.arange(10)", "min_run_count": 2, "name": "benchmarks.BasicPhysipy.time_use_case2", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "910cbd69c73e254c5c3b1c81f3271bc4453810135482de1ca4f999699ed5fa73", "warmup_time": -1}, "benchmarks.BenchDimension.time_dimension_div": {"code": "class BenchDimension:\n    def time_dimension_div(self):\n        self.length / self.mass\n\n    def setup(self):\n        self.length = Dimension(\"L\")\n        self.mass = Dimension(\"M\")\n        self.time = Dimension(\"T\")", "min_run_count": 2, "name": "benchmarks.BenchDimension.time_dimension_div", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "011e1d42422506ef727c80713b7b0c9db72e54fb13abeb12bcf56afc1294728b", "warmup_time": -1}, "benchmarks.BenchDimension.time_dimension_eq": {"code": "class BenchDimension:\n    def time_dimension_eq(self):\n        self.length == self.length\n\n    def setup(self):\n        self.length = Dimension(\"L\")\n        self.mass = Dimension(\"M\")\n        self.time = Dimension(\"T\")", "min_run_count": 2, "name": "benchmarks.BenchDimension.time_dimension_eq", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cf1adf5f6e4cc2dcad4c9ec4a7dd7adb22d451ec2a22022c02d03be645540de3", "warmup_time": -1}, "benchmarks.BenchDimension.time_dimension_mul": {"code": "class BenchDimension:\n    def time_dimension_mul(self):\n        self.length * self.mass\n\n    def setup(self):\n        self.length = Dimension(\"L\")\n        self.mass = Dimension(\"M\")\n        self.time = Dimension(\"T\")", "min_run_count": 2, "name": "benchmarks.BenchDimension.time_dimension_mul", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a56dd579065cb172ef8a694d675e91c5588212439a5e2b0cb952039e3f3dd408", "warmup_time": -1}, "benchmarks.BenchDimension.time_dimension_pow": {"code": "class BenchDimension:\n    def time_dimension_pow(self):\n        self.length**2\n\n    def setup(self):\n        self.length = Dimension(\"L\")\n        self.mass = Dimension(\"M\")\n        self.time = Dimension(\"T\")", "min_run_count": 2, "name": "benchmarks.BenchDimension.time_dimension_pow", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "46313936f7fbd3cf13f078012868681e2e50a95ff8515d545ede6e1da7e63a25", "warmup_time": -1}, "benchmarks.TimeSuite.time_range": {"code": "class TimeSuite:\n    def time_range(self):\n        d = self.d\n        for key in range(500):\n            x = d[key]\n\n    def setup(self):\n        self.d = {}\n        for x in range(500):\n            self.d[x] = None", "min_run_count": 2, "name": "benchmarks.TimeSuite.time_range", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cc3e85248a6284df968bcf8afe866da285261eb2487c10e9dd9e2d17a05deb47", "warmup_time": -1}, "imports.timeraw_import_constants": {"code": "def timeraw_import_constants():\n    return r\"from physipy import constants\"", "min_run_count": 2, "name": "imports.timeraw_import_constants", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9b458b9d6c3893bb97062df57745e4a2f222c83480c11a933fb75d02691bcf03", "warmup_time": -1}, "imports.timeraw_import_customunits": {"code": "def timeraw_import_customunits():\n    return r\"from physipy import custom_units\"", "min_run_count": 2, "name": "imports.timeraw_import_customunits", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "53efed816caafe0cbe9eb3ee562d870bef525e4aa2a190d20f6cf7b92645efad", "warmup_time": -1}, "imports.timeraw_import_math": {"code": "def timeraw_import_math():\n    return r\"from physipy import math\"", "min_run_count": 2, "name": "imports.timeraw_import_math", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f7101cc4c4cdd3f17c027fc01b0872f6d0cdea27182a9f967b56e50f0d50d0b1", "warmup_time": -1}, "imports.timeraw_import_physipy": {"code": "def timeraw_import_physipy():\n    return r\"import physipy\"", "min_run_count": 2, "name": "imports.timeraw_import_physipy", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "bacc6a373ebd8de8c4954920c7259d43547dc472ffb5c5869efb2fd183cec16c", "warmup_time": -1}, "imports.timeraw_import_physipy_calculus": {"code": "def timeraw_import_physipy_calculus():\n    return r\"from physipy.quantity import calculus\"", "min_run_count": 2, "name": "imports.timeraw_import_physipy_calculus", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1c2508d5d46fab835edda44eaea181a356a54b49250d4c223bd126aae0b5e52d", "warmup_time": -1}, "imports.timeraw_import_physipy_dimension": {"code": "def timeraw_import_physipy_dimension():\n    return r\"from physipy.quantity import dimension\"", "min_run_count": 2, "name": "imports.timeraw_import_physipy_dimension", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c611a4afdcf63d06f82836baf3b2f59c999a962e003de28cf74d6d46ca99750a", "warmup_time": -1}, "imports.timeraw_import_physipy_plot": {"code": "def timeraw_import_physipy_plot():\n    return r\"from physipy.quantity import plot\"", "min_run_count": 2, "name": "imports.timeraw_import_physipy_plot", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "361f6180d981cb3eb8525e43799290d48632ab38d05e82d1f716cbfd33bb49e0", "warmup_time": -1}, "imports.timeraw_import_physipy_quantity": {"code": "def timeraw_import_physipy_quantity():\n    return r\"from physipy.quantity import quantity\"", "min_run_count": 2, "name": "imports.timeraw_import_physipy_quantity", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "06f4091be36a8a86315eeb6f0c58b89ba7076f809e6608f5b06aa2cef89e9839", "warmup_time": -1}, "imports.timeraw_import_physipy_units": {"code": "def timeraw_import_physipy_units():\n    return r\"from physipy.quantity import utils\"", "min_run_count": 2, "name": "imports.timeraw_import_physipy_units", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c9bab35b0660403f98b700e93b6c6f0f351bd0b9e5bb8a36f718cfa30c8e6494", "warmup_time": -1}, "imports.timeraw_import_random": {"code": "def timeraw_import_random():\n    return r\"from physipy import random\"", "min_run_count": 2, "name": "imports.timeraw_import_random", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "83236528c4b2c373f3688488f76de5dd5b8988a0b5e673b37fa0b2dd67afdd26", "warmup_time": -1}, "imports.timeraw_import_units": {"code": "def timeraw_import_units():\n    return \"\"\"from physipy import units\"\"\"", "min_run_count": 2, "name": "imports.timeraw_import_units", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "abdb3434c6ce8ac791b51a2d8b1e50fcc20c629572b48d06adcb339769e8e394", "warmup_time": -1}}, "machines": {"MPB-de-Yoann": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-5557U CPU @ 3.10GHz", "machine": "MPB-de-Yoann", "num_cpu": "4", "os": "macOS Mojave 10.14.5", "ram": "17179869184", "version": 1}}, "tags": {"0.1.0": 96, "0.2.0": 212, "0.2.1": 230, "0.2.2": 493, "0.2.3": 751, "0.2.post1": 233}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}